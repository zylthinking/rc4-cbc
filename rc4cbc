
#include <stdio.h>
#include <string.h>
#include <stdint.h>

#define klen 256
typedef struct rc4_key_st
{
    uint8_t m,n;
    uint8_t key[256];
} rc4_stat;

static inline void rc4_init(rc4_stat* stat, const unsigned char* k, int bytes)
{
    int i;
    uint8_t key[klen];
    stat->m = stat->n = 0;

    for (i = 0; i < klen; i++) {
        stat->key[i] = i;
        key[i] = (uint8_t) k[i % bytes];
    }

    uint8_t j = 0;
    for (i = 0; i < klen; i++) {
        j += stat->key[i] + key[i];

        uint8_t c = stat->key[i];
        stat->key[i] = stat->key[j];
        stat->key[j] = c;
    }
}

static inline void rc4_enc(rc4_stat* stat, unsigned char* buffer, int bytes)
{
    uint8_t m = stat->m, n = stat->n;
    uint8_t* pch = &(stat->key[0]);

    for (int i = 0; i < bytes; i++) {
        uint8_t c = pch[++m];
        n = n + c;
        pch[m] = pch[n];
        pch[n] = c;
        uint8_t q = pch[(uint8_t)(pch[m] + pch[n])];
        pch[m] += pch[n] - buffer[i];
        buffer[i] ^= q;
    }

    stat->m = m;
    stat->n = n;
}

static inline void rc4_dec(rc4_stat* stat, unsigned char* buffer, int bytes)
{
    uint8_t m = stat->m, n = stat->n;
    uint8_t* pch = &(stat->key[0]);

    for (int i = 0; i < bytes; i++) {
        uint8_t c = pch[++m];
        n = n + c;
        pch[m] = pch[n];
        pch[n] = c;
        uint8_t q = pch[(uint8_t)(pch[m] + pch[n])];
        buffer[i] ^= q;
        pch[m] += pch[n] - buffer[i];
    }

    stat->m = m;
    stat->n = n;
}


void main()
{
    rc4_stat stat1, stat2;
    rc4_init(&stat1, "12345678", 8);
    rc4_init(&stat2, "12345678", 8);

    unsigned char a[] = "hello world, 197346825, fuck .sdkjgvfvoiw";
    int n = strlen(a);

    rc4_enc(&stat1, a, n);
    rc4_dec(&stat2, a, n);
    printf("%s\n", a);
}
